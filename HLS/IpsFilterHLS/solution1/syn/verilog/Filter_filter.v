// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Filter_filter (
        ap_clk,
        ap_rst,
        input_window_0,
        input_window_1,
        input_window_2,
        input_window_3,
        input_window_4,
        input_window_5,
        input_window_6,
        input_window_7,
        input_window_8,
        output_r,
        output_r_ap_vld
);

parameter    ap_ST_fsm_state2 = 24'd2;
parameter    ap_ST_fsm_state3 = 24'd4;
parameter    ap_ST_fsm_state4 = 24'd8;
parameter    ap_ST_fsm_state5 = 24'd16;
parameter    ap_ST_fsm_state6 = 24'd32;
parameter    ap_ST_fsm_state7 = 24'd64;
parameter    ap_ST_fsm_state8 = 24'd128;
parameter    ap_ST_fsm_state9 = 24'd256;
parameter    ap_ST_fsm_state10 = 24'd512;
parameter    ap_ST_fsm_state11 = 24'd1024;
parameter    ap_ST_fsm_state12 = 24'd2048;
parameter    ap_ST_fsm_state13 = 24'd4096;
parameter    ap_ST_fsm_state14 = 24'd8192;
parameter    ap_ST_fsm_state15 = 24'd16384;
parameter    ap_ST_fsm_state16 = 24'd32768;
parameter    ap_ST_fsm_state17 = 24'd65536;
parameter    ap_ST_fsm_state18 = 24'd131072;
parameter    ap_ST_fsm_state19 = 24'd262144;
parameter    ap_ST_fsm_state20 = 24'd524288;
parameter    ap_ST_fsm_state21 = 24'd1048576;
parameter    ap_ST_fsm_state22 = 24'd2097152;
parameter    ap_ST_fsm_state23 = 24'd4194304;
parameter    ap_ST_fsm_state24 = 24'd8388608;

input   ap_clk;
input   ap_rst;
input  [7:0] input_window_0;
input  [7:0] input_window_1;
input  [7:0] input_window_2;
input  [7:0] input_window_3;
input  [7:0] input_window_4;
input  [7:0] input_window_5;
input  [7:0] input_window_6;
input  [7:0] input_window_7;
input  [7:0] input_window_8;
output  [7:0] output_r;
output   output_r_ap_vld;

reg output_r_ap_vld;

wire   [9:0] ret_V_2_fu_263_p2;
reg   [9:0] ret_V_2_reg_485;
(* fsm_encoding = "none" *) reg   [23:0] ap_CS_fsm;
wire    ap_CS_fsm_state2;
wire   [10:0] ret_V_6_fu_306_p2;
reg   [10:0] ret_V_6_reg_490;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire   [31:0] grp_fu_217_p1;
reg   [31:0] result_reg_500;
wire    ap_CS_fsm_state9;
wire   [63:0] grp_fu_223_p1;
reg   [63:0] tmp_reg_505;
wire    ap_CS_fsm_state11;
wire   [63:0] grp_fu_226_p2;
reg   [63:0] tmp_1_reg_510;
wire    ap_CS_fsm_state17;
wire   [31:0] grp_fu_220_p1;
reg   [31:0] result_1_reg_515;
wire    ap_CS_fsm_state19;
reg   [0:0] p_Result_2_reg_521;
wire    ap_CS_fsm_state21;
wire   [7:0] trunc_ln331_fu_364_p1;
reg   [7:0] trunc_ln331_reg_526;
wire   [52:0] tmp_4_fu_368_p3;
reg   [52:0] tmp_4_reg_532;
wire  signed [11:0] sh_amt_fu_382_p2;
reg  signed [11:0] sh_amt_reg_540;
wire   [0:0] icmp_ln326_fu_376_p2;
wire  signed [31:0] sext_ln329_fu_388_p1;
reg  signed [31:0] sext_ln329_reg_545;
wire   [7:0] select_ln336_fu_421_p3;
wire   [0:0] icmp_ln330_fu_392_p2;
wire   [0:0] icmp_ln332_fu_398_p2;
wire   [0:0] icmp_ln333_fu_404_p2;
wire   [7:0] shl_ln345_fu_454_p2;
wire    ap_CS_fsm_state22;
wire   [0:0] icmp_ln343_fu_448_p2;
wire   [7:0] trunc_ln334_fu_467_p1;
wire    ap_CS_fsm_state23;
reg   [7:0] p_0346_5_reg_197;
wire    ap_CS_fsm_state24;
wire   [31:0] grp_fu_217_p0;
wire    ap_CS_fsm_state18;
reg   [31:0] grp_fu_223_p0;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state12;
wire   [8:0] lhs_V_fu_231_p1;
wire   [8:0] rhs_V_fu_235_p1;
wire   [8:0] ret_V_fu_239_p2;
wire   [9:0] lhs_V_1_fu_245_p1;
wire   [9:0] rhs_V_1_fu_249_p1;
wire   [9:0] ret_V_1_fu_253_p2;
wire   [9:0] zext_ln215_fu_259_p1;
wire   [10:0] zext_ln1353_fu_269_p1;
wire   [10:0] zext_ln215_1_fu_272_p1;
wire   [10:0] ret_V_3_fu_276_p2;
wire   [10:0] zext_ln215_2_fu_282_p1;
wire   [10:0] ret_V_4_fu_286_p2;
wire   [10:0] zext_ln215_3_fu_292_p1;
wire   [10:0] ret_V_5_fu_296_p2;
wire   [10:0] zext_ln215_4_fu_302_p1;
wire   [11:0] zext_ln215_5_fu_312_p1;
wire   [11:0] zext_ln215_6_fu_315_p1;
wire   [11:0] ret_V_7_fu_319_p2;
wire   [63:0] reg_V_fu_330_p1;
wire   [10:0] p_Result_s_fu_346_p4;
wire   [51:0] trunc_ln318_fu_360_p1;
wire   [62:0] trunc_ln310_fu_334_p1;
wire   [11:0] exp_V_fu_356_p1;
wire   [31:0] bitcast_ln696_fu_410_p1;
wire   [0:0] tmp_7_fu_413_p3;
wire   [11:0] sh_amt_1_fu_429_p2;
wire   [7:0] tmp_6_fu_438_p4;
wire   [7:0] trunc_ln342_fu_434_p1;
wire   [52:0] zext_ln334_fu_459_p1;
wire   [52:0] lshr_ln334_fu_462_p2;
wire   [7:0] sub_ln461_fu_471_p2;
reg   [23:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 24'd2;
end

Filter_uitofp_32ns_32_6_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Filter_uitofp_32ns_32_6_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_217_p0),
    .ce(1'b1),
    .dout(grp_fu_217_p1)
);

Filter_fptrunc_64ns_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
Filter_fptrunc_64ns_32_2_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_1_reg_510),
    .ce(1'b1),
    .dout(grp_fu_220_p1)
);

Filter_fpext_32ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
Filter_fpext_32ns_64_2_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_223_p0),
    .ce(1'b1),
    .dout(grp_fu_223_p1)
);

Filter_dmul_64ns_64ns_64_6_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
Filter_dmul_64ns_64ns_64_6_max_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_reg_505),
    .din1(64'd4592670019360778722),
    .ce(1'b1),
    .dout(grp_fu_226_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state2;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln330_fu_392_p2 == 1'd1) & (icmp_ln326_fu_376_p2 == 1'd0))) begin
        p_0346_5_reg_197 <= trunc_ln331_fu_364_p1;
    end else if ((((1'b1 == ap_CS_fsm_state21) & (icmp_ln326_fu_376_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state22) & (icmp_ln343_fu_448_p2 == 1'd0)))) begin
        p_0346_5_reg_197 <= 8'd0;
    end else if (((1'b1 == ap_CS_fsm_state22) & (icmp_ln343_fu_448_p2 == 1'd1))) begin
        p_0346_5_reg_197 <= shl_ln345_fu_454_p2;
    end else if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln332_fu_398_p2 == 1'd1) & (icmp_ln333_fu_404_p2 == 1'd0) & (icmp_ln330_fu_392_p2 == 1'd0) & (icmp_ln326_fu_376_p2 == 1'd0))) begin
        p_0346_5_reg_197 <= select_ln336_fu_421_p3;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        p_0346_5_reg_197 <= trunc_ln334_fu_467_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        p_Result_2_reg_521 <= reg_V_fu_330_p1[32'd63];
        tmp_4_reg_532[51 : 0] <= tmp_4_fu_368_p3[51 : 0];
        trunc_ln331_reg_526 <= trunc_ln331_fu_364_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        result_1_reg_515 <= grp_fu_220_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        result_reg_500 <= grp_fu_217_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        ret_V_2_reg_485 <= ret_V_2_fu_263_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ret_V_6_reg_490 <= ret_V_6_fu_306_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln326_fu_376_p2 == 1'd0))) begin
        sext_ln329_reg_545 <= sext_ln329_fu_388_p1;
        sh_amt_reg_540 <= sh_amt_fu_382_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp_1_reg_510 <= grp_fu_226_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_reg_505 <= grp_fu_223_p1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_223_p0 = result_1_reg_515;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_223_p0 = result_reg_500;
    end else begin
        grp_fu_223_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        output_r_ap_vld = 1'b1;
    end else begin
        output_r_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln333_fu_404_p2 == 1'd1) & (icmp_ln332_fu_398_p2 == 1'd1) & (icmp_ln330_fu_392_p2 == 1'd0) & (icmp_ln326_fu_376_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln332_fu_398_p2 == 1'd0) & (icmp_ln330_fu_392_p2 == 1'd0) & (icmp_ln326_fu_376_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign bitcast_ln696_fu_410_p1 = result_1_reg_515;

assign exp_V_fu_356_p1 = p_Result_s_fu_346_p4;

assign grp_fu_217_p0 = ret_V_7_fu_319_p2;

assign icmp_ln326_fu_376_p2 = ((trunc_ln310_fu_334_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln330_fu_392_p2 = ((p_Result_s_fu_346_p4 == 11'd1075) ? 1'b1 : 1'b0);

assign icmp_ln332_fu_398_p2 = (($signed(sh_amt_fu_382_p2) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign icmp_ln333_fu_404_p2 = (($signed(sh_amt_fu_382_p2) < $signed(12'd54)) ? 1'b1 : 1'b0);

assign icmp_ln343_fu_448_p2 = (($signed(tmp_6_fu_438_p4) < $signed(8'd1)) ? 1'b1 : 1'b0);

assign lhs_V_1_fu_245_p1 = ret_V_fu_239_p2;

assign lhs_V_fu_231_p1 = input_window_0;

assign lshr_ln334_fu_462_p2 = tmp_4_reg_532 >> zext_ln334_fu_459_p1;

assign output_r = ((p_Result_2_reg_521[0:0] === 1'b1) ? sub_ln461_fu_471_p2 : p_0346_5_reg_197);

assign p_Result_s_fu_346_p4 = {{reg_V_fu_330_p1[62:52]}};

assign reg_V_fu_330_p1 = grp_fu_223_p1;

assign ret_V_1_fu_253_p2 = (lhs_V_1_fu_245_p1 + rhs_V_1_fu_249_p1);

assign ret_V_2_fu_263_p2 = (ret_V_1_fu_253_p2 + zext_ln215_fu_259_p1);

assign ret_V_3_fu_276_p2 = (zext_ln1353_fu_269_p1 + zext_ln215_1_fu_272_p1);

assign ret_V_4_fu_286_p2 = (ret_V_3_fu_276_p2 + zext_ln215_2_fu_282_p1);

assign ret_V_5_fu_296_p2 = (ret_V_4_fu_286_p2 + zext_ln215_3_fu_292_p1);

assign ret_V_6_fu_306_p2 = (ret_V_5_fu_296_p2 + zext_ln215_4_fu_302_p1);

assign ret_V_7_fu_319_p2 = (zext_ln215_5_fu_312_p1 + zext_ln215_6_fu_315_p1);

assign ret_V_fu_239_p2 = (lhs_V_fu_231_p1 + rhs_V_fu_235_p1);

assign rhs_V_1_fu_249_p1 = input_window_2;

assign rhs_V_fu_235_p1 = input_window_1;

assign select_ln336_fu_421_p3 = ((tmp_7_fu_413_p3[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign sext_ln329_fu_388_p1 = sh_amt_fu_382_p2;

assign sh_amt_1_fu_429_p2 = ($signed(12'd0) - $signed(sh_amt_reg_540));

assign sh_amt_fu_382_p2 = (12'd1075 - exp_V_fu_356_p1);

assign shl_ln345_fu_454_p2 = trunc_ln331_reg_526 << trunc_ln342_fu_434_p1;

assign sub_ln461_fu_471_p2 = (8'd0 - p_0346_5_reg_197);

assign tmp_4_fu_368_p3 = {{1'd1}, {trunc_ln318_fu_360_p1}};

assign tmp_6_fu_438_p4 = {{sh_amt_1_fu_429_p2[10:3]}};

assign tmp_7_fu_413_p3 = bitcast_ln696_fu_410_p1[32'd31];

assign trunc_ln310_fu_334_p1 = reg_V_fu_330_p1[62:0];

assign trunc_ln318_fu_360_p1 = reg_V_fu_330_p1[51:0];

assign trunc_ln331_fu_364_p1 = reg_V_fu_330_p1[7:0];

assign trunc_ln334_fu_467_p1 = lshr_ln334_fu_462_p2[7:0];

assign trunc_ln342_fu_434_p1 = sh_amt_1_fu_429_p2[7:0];

assign zext_ln1353_fu_269_p1 = ret_V_2_reg_485;

assign zext_ln215_1_fu_272_p1 = input_window_4;

assign zext_ln215_2_fu_282_p1 = input_window_5;

assign zext_ln215_3_fu_292_p1 = input_window_6;

assign zext_ln215_4_fu_302_p1 = input_window_7;

assign zext_ln215_5_fu_312_p1 = ret_V_6_reg_490;

assign zext_ln215_6_fu_315_p1 = input_window_8;

assign zext_ln215_fu_259_p1 = input_window_3;

assign zext_ln334_fu_459_p1 = $unsigned(sext_ln329_reg_545);

always @ (posedge ap_clk) begin
    tmp_4_reg_532[52] <= 1'b1;
end

endmodule //Filter_filter
